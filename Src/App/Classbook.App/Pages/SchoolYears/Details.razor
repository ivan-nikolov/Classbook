@page "/years/details/{Id:int}"
@using Classbook.App.Models.SchoolYear;
@inject Classbook.Services.Data.ISchoolYearService yearsService;

@if (!this.yearExists)
{
    <p>Търсената година не е намерена.</p>
}
else
{
    <h4>Учебна година: @this.year.Year</h4>
    @if (this.year.Grades.Count == 0)
    {
        <hr />
        <p>Няма открити класове за текущата година.</p>
    }
    else
    {
        <hr />
        <h5>Класове:</h5>
        <ul class="list-group list-group-horizontal d-flex" style="list-style-type:none;">
            @foreach (var grade in this.year.Grades)
            {
                <li><a class="btn btn-sm btn-outline-primary list-group-item mr-1" href="/grades/details/@grade.Id">@grade.GradeNumber</a></li>
            }
        </ul>
    }
    <hr />
    <a class="btn btn-outline-info" href="/grades/create/@this.year.Id" >Добави клас</a>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private bool yearExists = false;

    private SchoolYearDetailsViewModel year;

    protected override async Task OnInitializedAsync()
    {
        var yearDto = await this.yearsService.GetById(this.Id);
        this.year = new SchoolYearDetailsViewModel()
        {
            Id = yearDto.Id,
            Year = yearDto.Year,
            Grades = yearDto.Grades.Select(y => new YearDetailsGradeViewModel()
            {
                Id = y.Id,
                GradeNumber = y.GradeNuber,
                SchoolYearId = yearDto.Id
            }).ToList()
        };

        this.yearExists = this.year != null;

        await base.OnInitializedAsync();
    }
}
