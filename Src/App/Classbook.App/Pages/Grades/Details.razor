@page "/grades/details/{Id:int}";
@inject IGradeService gradeService;
@inject ISubjectService subjectService;
@inject IModalService modalService;
@inject IToastService toastService;
@using Classbook.App.Models.Grades;
@using static Classbook.Common.Messages.GradeMessages; 


<BlazoredModal />

@if (this.grade == null)
{
    <Loader></Loader>
}
else
{
    <h2>@this.grade.GradeNumber</h2>

    if (this.grade.Subjects.Count == 0)
    {
        <p>Няма предмети за текущата година.</p>
    }
    else
    {
        foreach (var subject in this.grade.Subjects)
        {
            <p>@subject.Name</p>
        }
    }

    <button class="btn btn-outline-primary" @onclick="@(() => this.ShowModal(this.Id))">Добави предмет</button>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private GradeDetailsViewModel grade;

    protected override async Task OnInitializedAsync()
    {
        this.grade = await this.gradeService.GetByIdAsync<GradeDetailsViewModel>(this.Id);
        await base.OnInitializedAsync();
    }

    private void ShowModal(int gradeId)
    {
        var parameters = new ModalParameters();
        parameters.Add("FormId", 1);
        parameters.Add("gradeId", gradeId);
        var options = new ModalOptions()
        {
            Position = "blazored-modal-topleft",
        };

        this.modalService.OnClose += this.ModalClosed;
        this.modalService.OnClose += this.UpdateSubjects;
        this.modalService.Show<AddSubject>("Добавяне на предмет", parameters, options);
    }

    private void ModalClosed(object sender, ModalResult modalResult)
    {
        this.modalService.OnClose -= this.ModalClosed;
        this.modalService.OnClose -= this.UpdateSubjects;
    }

    private async void UpdateSubjects(object sender, ModalResult modalResult = null)
    {
        if (!modalResult.Cancelled)
        {
            this.grade.Subjects = (await this.subjectService.GetByGradeIdAsync<GradeSubjectViewModel>(this.grade.Id)).ToList();
            this.StateHasChanged();
            this.toastService.ShowSuccess(SubjectAddedSuccessfulyMessage);
        }
    }
}
